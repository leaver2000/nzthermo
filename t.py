import numpy as np
import metpy.calc as mpcalc
from metpy.units import units
import src.nzthermo._core as C
import src.nzthermo.core as nzt
import pandas as pd
import src.nzthermo._ufunc as UF

PRESSURE = np.array(
    [
        [
            1013,
            1000,
            975,
            950,
            925,
            900,
            875,
            850,
            825,
            800,
            775,
            750,
            725,
            700,
            650,
            600,
            550,
            500,
            450,
            400,
            350,
            300,
        ],
        [
            1013,
            1000,
            975,
            950,
            925,
            900,
            875,
            850,
            825,
            800,
            775,
            750,
            725,
            700,
            650,
            600,
            550,
            500,
            450,
            400,
            350,
            300,
        ],
        [
            1013,
            1000,
            975,
            950,
            925,
            900,
            875,
            850,
            825,
            800,
            775,
            750,
            725,
            700,
            650,
            600,
            550,
            500,
            450,
            400,
            350,
            300,
        ],
        [
            1013,
            1000,
            975,
            950,
            925,
            900,
            875,
            850,
            825,
            800,
            775,
            750,
            725,
            700,
            650,
            600,
            550,
            500,
            450,
            400,
            350,
            300,
        ],
    ],
    dtype=np.float32,
)
PRESSURE *= 100.0
TEMPERATURE = np.array(
    [
        [
            243,
            242,
            241,
            240,
            239,
            237,
            236,
            235,
            233,
            232,
            231,
            229,
            228,
            226,
            235,
            236,
            234,
            231,
            226,
            221,
            217,
            211,
        ],
        [
            250,
            249,
            248,
            247,
            246,
            244,
            243,
            242,
            240,
            239,
            238,
            236,
            235,
            233,
            240,
            239,
            236,
            232,
            227,
            223,
            217,
            211,
        ],
        [
            293,
            292,
            290,
            288,
            287,
            285,
            284,
            282,
            281,
            279,
            279,
            280,
            279,
            278,
            275,
            270,
            268,
            264,
            260,
            254,
            246,
            237,
        ],
        [
            300,
            299,
            297,
            295,
            293,
            291,
            292,
            291,
            291,
            289,
            288,
            286,
            285,
            285,
            281,
            278,
            273,
            268,
            264,
            258,
            251,
            242,
        ],
    ],
    dtype=np.float32,
)
DEWPOINT = np.array(
    [
        [
            224,
            224,
            224,
            224,
            224,
            223,
            223,
            223,
            223,
            222,
            222,
            222,
            221,
            221,
            233,
            233,
            231,
            228,
            223,
            218,
            213,
            207,
        ],
        [
            233,
            233,
            232,
            232,
            232,
            232,
            231,
            231,
            231,
            231,
            230,
            230,
            230,
            229,
            237,
            236,
            233,
            229,
            223,
            219,
            213,
            207,
        ],
        [
            288,
            288,
            287,
            286,
            281,
            280,
            279,
            277,
            276,
            275,
            270,
            258,
            244,
            247,
            243,
            254,
            262,
            248,
            229,
            232,
            229,
            224,
        ],
        [
            294,
            294,
            293,
            292,
            291,
            289,
            285,
            282,
            280,
            280,
            281,
            281,
            278,
            274,
            273,
            269,
            259,
            246,
            240,
            241,
            226,
            219,
        ],
    ],
    dtype=np.float32,
)
CAPE, CIN = nzt.cape_cin(
    PRESSURE[0],
    TEMPERATURE,
    DEWPOINT,
)


for i in range(TEMPERATURE.shape[0]):
    P, T, Td = PRESSURE[i], TEMPERATURE[i], DEWPOINT[i]
    prof = mpcalc.parcel_profile(
        P * units.pascal,
        T[0] * units.degK,
        Td[0] * units.degK,
    )
    b = mpcalc.cape_cin(
        P * units.pascal,
        T * units.degK,
        Td * units.degK,
        prof,
    )
    print(
        pd.DataFrame(
            {
                "metpy": [b[0].m, b[1].m],
                "nzthermo": [CAPE[i], CIN[i]],
            },
            index=["CAPE", "CIN"],
        ).T
    )


pp = C.parcel_profile(
    PRESSURE[0],
    TEMPERATURE[:, 0],
    DEWPOINT[:, 0],
)["temperature"]
pp2 = nzt.parcel_profile(
    PRESSURE[0],
    TEMPERATURE[:, :],
    DEWPOINT[:, :],
).without_lcl()[-1]

print("PARCEL PROFILE")
for i in range(pp.shape[0]):
    metpy_pp = mpcalc.parcel_profile(
        PRESSURE[0] * units.pascal,
        TEMPERATURE[i, 0] * units.degK,
        DEWPOINT[i, 0] * units.degK,
    ).m
    print(
        mpcalc.lcl(
            PRESSURE[0, 0] * units.pascal,
            TEMPERATURE[i, 0] * units.degK,
            DEWPOINT[i, 0] * units.degK,
        )
    )
    print(
        "[DELTA]",
        (np.abs(pp[i] - metpy_pp).max(), np.abs(pp[i] - pp2[i]).max(), np.abs(metpy_pp - pp2[i]).max()),
        "METPY",
        metpy_pp,
        "NZTHERMO",
        pp[i],
        sep="\n",
        # (pp2[i] - metpy_pp).max(),
        # (pp[i] - pp2[i]).max(),
    )

# pp = parcel_profile_with_lcl(
#     PRESSURE[0],
#     TEMPERATURE[:, 0],
#     DEWPOINT[:, 0],
# )

# pp2 = nzt.parcel_profile(
# #     PRESSURE[0],
# #     TEMPERATURE[:, :],
# #     DEWPOINT[:, :],
# # ).with_lcl()[-1]
# print(pp)
# print("PARCEL PROFILE WITH LCL")
# for i in range(pp.shape[0]):
#     metpy_pp = mpcalc.parcel_profile_with_lcl(
#         PRESSURE[0] * units.pascal,
#         TEMPERATURE[i] * units.degK,
#         DEWPOINT[i] * units.degK,
#     )[1].m

#     print(
#         metpy_pp,
#         (pp[i] - metpy_pp).max(),
#         # (pp2[i] - metpy_pp).max(),
#         # (pp[i] - pp2[i]).max(),
#     )


print(
    UF.dry_lapse(100000, 300, 101325),
    mpcalc.dry_lapse(100000 * units.pascal, 300 * units.degK, 101325 * units.pascal).m,
)
